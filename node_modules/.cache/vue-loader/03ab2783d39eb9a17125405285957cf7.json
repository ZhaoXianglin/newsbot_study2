{"remainingRequest":"/Users/xianglin/WebstormProjects/newsbot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/newsbot/src/views/Quiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/newsbot/src/views/Quiz.vue","mtime":1666319804152},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/babel-loader/lib/index.js","mtime":1658830952000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7aW5zdGFuY2V9IGZyb20gIkAvcmVxdWVzdCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlF1aXoiLAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBhdXRoOiB0cnVlLAogICAgICBxMWdyb3VwOiBbCiAgICAgICAge3E6ICJUaGlzIGJyb3dzaW5nIHN0eWxlIGFsbG93cyBtZSB0byBzZWxlY3QgYSBuZXdzIGFydGljbGUgZWFzaWx5LiIsIHQ6ICJlYXNlX29mX3VzZSJ9LAogICAgICAgIHtxOiAiVGhlIGJyb3dzaW5nIHN0eWxlIG9mIHRoaXMgbmV3cyBjaGF0Ym90IGlzIHVzZXItZnJpZW5kbHkuIiwgdDogInVzZXJfZnJpZW5kbGluZXNzIn0sCiAgICAgICAge3E6ICJJIHF1aWNrbHkgYmVjYW1lIHNraWxsZnVsIHdpdGggdGhlIGJyb3dzaW5nIHN0eWxlIGluIHRoaXMgbmV3cyBjaGF0Ym90LiIsIHQ6ICJpbnRlbnRfdG9fdXNlIn0sCiAgICAgICAge3E6ICJUaGUgb3BlcmF0aW9ucyBvZiB0aGlzIGNoYXRib3QgZm9yIG5ld3MgYnJvd3NpbmcgYXJlIHNpbXBsZSBhbmQgdW5jb21wbGljYXRlZC4iLCB0OiAiZWFzZV9vZl9vcGVyYXRpb24ifSwKICAgICAgICB7cTogIkl0IGlzIGVhc3kgdG8gbmF2aWdhdGUgYmV0d2VlbiBuZXdzIHN0b3JpZXMgaW4gdGhpcyBuZXdzIGNoYXRib3QuIiwgdDogImVhc2Vfb2ZfbmF2aWdhdGlvbiJ9LAogICAgICAgIHtxOiAiSSBhbSBzYXRpc2ZpZWQgd2l0aCB0aGlzIGJyb3dzaW5nIGV4cGVyaWVuY2UgaW4gdGhpcyBuZXdzIGNoYXRib3QuIiwgdDogInNhdGlzZmFjdGlvbiJ9LAogICAgICAgIHtxOiAiSSBjYW4ganVkZ2Ugd2hpY2ggbmV3cyBhcnRpY2xlcyBmaXQgbXkgaW50ZXJlc3RzIGVhc2lseSB3aXRoIHRoaXMgYnJvd3Npbmcgc3R5bGUuIiwgdDogImVhc2Vfb2Zfc2VsZWN0aW9uIn0sCiAgICAgIF0sCiAgICAgIHExZ3JvdXBhbnM6IEFycmF5KDcpLmZpbGwobnVsbCksCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkZhaWxlZCgpIHsKICAgICAgdGhpcy4kdG9hc3QoIllvdSBtYXkgaGF2ZSBtaXNzZWQgc29tZSBpdGVtcywgcGxlYXNlIGZpbGwgaW4uIik7CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uICh2YWx1ZXMpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdmFsdWVzWydkYXRhJ10gPSBKU09OLnN0cmluZ2lmeSh2YWx1ZXMpOwogICAgICB2YWx1ZXNbJ3Nlc3Npb25faWQnXSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzZXNzaW9uX2lkJyk7CiAgICAgIHZhbHVlc1sndXVpZCddID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3V1aWQnKTsKICAgICAgdmFsdWVzWydzZXNzaW9uRVQnXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICBpbnN0YW5jZS5wb3N0KCcvc3R1ZHkxL2V2YWx1YXRlJywgdmFsdWVzKS50aGVuKChyZXMpID0+IHsKICAgICAgICAvL2NvbnNvbGUubG9nKHJlcykKICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzID09PSAxKSB7CiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiYWN0aXZlIiwgbmV3IERhdGUoKS5nZXRUaW1lKCkudG9TdHJpbmcoKSk7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2Vzc2lvbl9pZCcpID09PSAnMycpIHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoJy9mZWVkYmFjaycpLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSkKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsZXQgcm91dGVfdXJsID0gJy9zZXNzaW9uJyArIChwYXJzZUludChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2Vzc2lvbl9pZCcpKSsxKS50b1N0cmluZygpCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHJvdXRlX3VybCkuY2F0Y2goKGVycikgPT4gewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCgogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJHRvYXN0KCJQbGVhc2UgcmVhZCBhbmQgYWNjZXB0IHRoZSBpbmZvcm1lZCBjb25zZW50IGZpcnN0LiIpCiAgICAgICAgfQogICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgY29uc29sZS5sb2coZXJyLm1lc3NhZ2UpOwogICAgICAgIHRoaXMuJHRvYXN0KCJOZXR3b3JrIGVycm9yLCBwbGVhc2UgdHJ5IGFnYWluLiIpOwogICAgICB9KQogICAgfSwKICB9Cn0K"},{"version":3,"sources":["Quiz.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Quiz.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"quiz\">\n    <van-nav-bar title=\"Feedback\"/>\n    <van-form @submit=\"onSubmit\" scroll-to-error @failed=\"onFailed\" validate-trigger=\"onSubmit\">\n      <p style=\"padding:0 10px;font-weight:bold;text-align: left\">How much do you agree or disagree with the following\n        statements?</p>\n      <p style=\"padding:0 10px;font-weight:normal; text-align: left;font-size: 14px\">Strongly disagree(1), Disagree(2),\n        Somewhat\n        disagree(3), Neutral(4), Somewhat agree(5), Agree(6), Strongly agree(7)</p>\n      <van-field v-for=\"(item, index) in q1group\" :key=\"item.t\" :name=\"item.t\"\n                 :rules=\"[{ required: auth, message: 'required' }]\">\n        <template #input>\n          <van-row style=\"width: 100%;\">\n            <van-row type=\"flex\">\n              <van-col span=\"24\"><span style=\"font-weight:600\">{{ index + 1 }}. {{ item.q }}</span></van-col>\n            </van-row>\n            <van-row type=\"flex\" align=\"center\" justify=\"between\">\n              <van-col span=\"4\" class=\"score_left_s\" style=\"text-align:right;\">Strongly disagree</van-col>\n              <van-col>\n                <van-radio-group v-model=\"q1groupans[index]\" direction=\"horizontal\" class=\"matrix_table\">\n                  <van-radio :name=\"val\" v-for=\"val in 7\" :key=\"val\" checked-color=\"#ee0a24\" class=\"item\">\n                    {{ val }}\n                  </van-radio>\n                </van-radio-group>\n              </van-col>\n              <van-col span=\"4\">Strongly agree</van-col>\n            </van-row>\n          </van-row>\n        </template>\n      </van-field>\n      <div style=\"margin: 36px;\">\n        <van-button round block type=\"info\" native-type=\"submit\" :loading=\"loading\">Continue</van-button>\n      </div>\n    </van-form>\n  </div>\n</template>\n\n<script>\nimport {instance} from \"@/request\";\n\nexport default {\n  name: \"Quiz\",\n  data: function () {\n    return {\n      loading: false,\n      auth: true,\n      q1group: [\n        {q: \"This browsing style allows me to select a news article easily.\", t: \"ease_of_use\"},\n        {q: \"The browsing style of this news chatbot is user-friendly.\", t: \"user_friendliness\"},\n        {q: \"I quickly became skillful with the browsing style in this news chatbot.\", t: \"intent_to_use\"},\n        {q: \"The operations of this chatbot for news browsing are simple and uncomplicated.\", t: \"ease_of_operation\"},\n        {q: \"It is easy to navigate between news stories in this news chatbot.\", t: \"ease_of_navigation\"},\n        {q: \"I am satisfied with this browsing experience in this news chatbot.\", t: \"satisfaction\"},\n        {q: \"I can judge which news articles fit my interests easily with this browsing style.\", t: \"ease_of_selection\"},\n      ],\n      q1groupans: Array(7).fill(null),\n    }\n  },\n  methods: {\n    onFailed() {\n      this.$toast(\"You may have missed some items, please fill in.\");\n    },\n    onSubmit: function (values) {\n      this.loading = true;\n      values['data'] = JSON.stringify(values);\n      values['session_id'] = localStorage.getItem('session_id');\n      values['uuid'] = localStorage.getItem('uuid');\n      values['sessionET'] = new Date().getTime();\n      instance.post('/study1/evaluate', values).then((res) => {\n        //console.log(res)\n        if (res.data.status === 1) {\n          localStorage.setItem(\"active\", new Date().getTime().toString());\n          this.loading = false;\n          if (localStorage.getItem('session_id') === '3') {\n            this.$router.replace('/feedback').catch((err) => {\n              console.log(err.message)\n            });\n          } else {\n            let route_url = '/session' + (parseInt(localStorage.getItem('session_id'))+1).toString()\n            this.$router.replace(route_url).catch((err) => {\n              console.log(err.message)\n            });\n          }\n\n\n        } else {\n          this.loading = false;\n          this.$toast(\"Please read and accept the informed consent first.\")\n        }\n      }).catch((err) => {\n        this.loading = false;\n        console.log(err.message);\n        this.$toast(\"Network error, please try again.\");\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}