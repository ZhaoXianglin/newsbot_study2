{"remainingRequest":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xianglin/WebstormProjects/PhoneBot/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/PhoneBot/src/views/Scenario.vue?vue&type=template&id=1048846c&scoped=true&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/PhoneBot/src/views/Scenario.vue","mtime":1661269390773},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658830958000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}