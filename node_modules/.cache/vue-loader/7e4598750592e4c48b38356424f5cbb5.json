{"remainingRequest":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/PhoneBot/src/views/ChatbotwithExp.vue?vue&type=template&id=246569e2&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/PhoneBot/src/views/ChatbotwithExp.vue","mtime":1661269390773},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658830958000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/PhoneBot/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}