{"remainingRequest":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/newsbot_study2/src/views/Quiz.vue?vue&type=style&index=0&s=true&lang=css&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/src/views/Quiz.vue","mtime":1666610355112},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/css-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658830958000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/postcss-loader/src/index.js","mtime":1658830952000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tYXRyaXhfdGFibGUgewogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7CiAgcGFkZGluZzogMCAxMnB4Owp9CgoubWF0cml4X3RhYmxlIC5pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1yaWdodDogOHB4ICFpbXBvcnRhbnQ7Cn0KCi5tYXRyaXhfdGFibGUgLnZhbi1yYWRpb19fbGFiZWwgewogIG1hcmdpbi1sZWZ0OiAwOwp9CgpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQyNXB4KSB7CiAgLnNjb3JlX2xlZnQgewogICAgd2lkdGg6IDcwcHggIWltcG9ydGFudDsKICB9CgogIC5zY29yZV9sZWZ0X3NzIHsKICAgIHdpZHRoOiAzOXB4ICFpbXBvcnRhbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["Quiz.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Quiz.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"quiz\">\n    <van-nav-bar title=\"Feedback\"/>\n    <van-form @submit=\"onSubmit\" scroll-to-error @failed=\"onFailed\" validate-trigger=\"onSubmit\">\n      <p style=\"padding:0 10px;font-weight:bold;text-align: left\">How much do you agree or disagree with the following\n        statements?</p>\n      <p style=\"padding:0 10px;font-weight:normal; text-align: left;font-size: 14px\">Strongly disagree(1), Disagree(2),\n        Somewhat\n        disagree(3), Neutral(4), Somewhat agree(5), Agree(6), Strongly agree(7)</p>\n      <van-field v-for=\"(item, index) in q1group\" :key=\"item.t\" :name=\"item.t\"\n                 :rules=\"[{ required: auth, message: 'required' }]\">\n        <template #input>\n          <van-row style=\"width: 100%;\">\n            <van-row type=\"flex\">\n              <van-col span=\"24\"><span style=\"font-weight:600\">{{ index + 1 }}. {{ item.q }}</span></van-col>\n            </van-row>\n            <van-row type=\"flex\" align=\"center\" justify=\"between\">\n              <van-col span=\"4\" class=\"score_left_s\" style=\"text-align:right;\">Strongly disagree</van-col>\n              <van-col>\n                <van-radio-group v-model=\"q1groupans[index]\" direction=\"horizontal\" class=\"matrix_table\">\n                  <van-radio :name=\"val\" v-for=\"val in 7\" :key=\"val\" checked-color=\"#ee0a24\" class=\"item\">\n                    {{ val }}\n                  </van-radio>\n                </van-radio-group>\n              </van-col>\n              <van-col span=\"4\">Strongly agree</van-col>\n            </van-row>\n          </van-row>\n        </template>\n      </van-field>\n      <div style=\"margin: 36px;\">\n        <van-button round block type=\"info\" native-type=\"submit\" :loading=\"loading\">Continue</van-button>\n      </div>\n    </van-form>\n  </div>\n</template>\n\n<script>\nimport {instance} from \"@/request\";\n\nexport default {\n  name: \"Quiz\",\n  data: function () {\n    return {\n      loading: false,\n      auth: true,\n      q1group: [\n        {q: \"This browsing style allows me to select a news article easily.\", t: \"ease_of_use\"},\n        {q: \"The browsing style of this news chatbot is user-friendly.\", t: \"user_friendliness\"},\n        {q: \"I quickly became skillful with the browsing style in this news chatbot.\", t: \"intent_to_use\"},\n        {q: \"The operations of this chatbot for news browsing are simple and uncomplicated.\", t: \"ease_of_operation\"},\n        {q: \"It is easy to navigate between news stories in this news chatbot.\", t: \"ease_of_navigation\"},\n        {q: \"I am satisfied with this browsing experience in this news chatbot.\", t: \"satisfaction\"},\n        {q: \"I can judge which news articles fit my interests easily with this browsing style.\", t: \"ease_of_selection\"},\n      ],\n      q1groupans: Array(7).fill(null),\n    }\n  },\n  methods: {\n    onFailed() {\n      this.$toast(\"You may have missed some items, please fill in.\");\n    },\n    onSubmit: function (values) {\n      this.loading = true;\n      values['data'] = JSON.stringify(values);\n      values['session_id'] = localStorage.getItem('session_id');\n      values['uuid'] = localStorage.getItem('uuid');\n      values['sessionET'] = new Date().getTime();\n      instance.post('/study1/evaluate', values).then((res) => {\n        //console.log(res)\n        if (res.data.status === 1) {\n          localStorage.setItem(\"active\", new Date().getTime().toString());\n          this.loading = false;\n          if (localStorage.getItem('session_id') === '3') {\n            this.$router.replace('/feedback').catch((err) => {\n              console.log(err.message)\n            });\n          } else {\n            let route_url = '/session' + (parseInt(localStorage.getItem('session_id'))+1).toString()\n            this.$router.replace(route_url).catch((err) => {\n              console.log(err.message)\n            });\n          }\n\n\n        } else {\n          this.loading = false;\n          this.$toast(\"Please read and accept the informed consent first.\")\n        }\n      }).catch((err) => {\n        this.loading = false;\n        console.log(err.message);\n        this.$toast(\"Network error, please try again.\");\n      })\n    },\n  }\n}\n</script>\n\n<style s>\n.matrix_table {\n  justify-content: center;\n  flex-wrap: nowrap !important;\n  padding: 0 12px;\n}\n\n.matrix_table .item {\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px !important;\n}\n\n.matrix_table .van-radio__label {\n  margin-left: 0;\n}\n\n@media only screen and (min-width: 425px) {\n  .score_left {\n    width: 70px !important;\n  }\n\n  .score_left_ss {\n    width: 39px !important;\n  }\n}\n</style>\n"]}]}