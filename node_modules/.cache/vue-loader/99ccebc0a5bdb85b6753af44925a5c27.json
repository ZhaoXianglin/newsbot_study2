{"remainingRequest":"/Users/xianglin/WebstormProjects/newsbot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/newsbot/src/views/Assistant.vue?vue&type=template&id=a010c9d8&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/newsbot/src/views/Assistant.vue","mtime":1662200190754},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658830958000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}