{"remainingRequest":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xianglin/WebstormProjects/newsbot_study2/src/views/ChatHumanHigh.vue?vue&type=template&id=e0dacea6&scoped=true&","dependencies":[{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/src/views/ChatHumanHigh.vue","mtime":1661269390772},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658830958000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/cache-loader/dist/cjs.js","mtime":1658830951000},{"path":"/Users/xianglin/WebstormProjects/newsbot_study2/node_modules/vue-loader/lib/index.js","mtime":1658830954000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}